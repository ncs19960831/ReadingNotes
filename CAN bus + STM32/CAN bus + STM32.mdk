Title         : CAN总线+STM32的学习心得与笔记整理
Author        : GreenDreamer
Logo          : False

[TITLE]
****
**题注：至于CAN有多牛逼以及有多有前景这种文字我就懒得复制粘贴了。一切争取最简！**

**关于为何写下这篇文章**：因为最近单位需要做关于STM32使用CAN总线进行数据收发的设备，而本人恰巧对于CAN总线几乎一无所知。所以断断续续了解了几天之后写下了本文。且因为网上对于STM32的CAN资料太过松散，我也将其整理了整理，并且加了自己的一点私货，以作总结。

# CAN总线的规范数据格式
CAN总线主要的规范是ISOXXXXX，其规范格式中指出：CAN总线的主要数据为其报文主体。整个报文+各种ID与标志位组成了可以被发送的**帧**。
其中，帧又分为了以下的5种：


* 1.**数据帧**，由于发送方传输给接收方数据。
* 2.**帧间隔**，两帧之间发送的数据间隔帧。
* 3.**摇控帧**，接收端发送给发送端自身的ID，便于建立网络表。
* 4.**错误帧**，接收端发现数据错误的时候向发送端发送帧。
* 5.**过载帧**，接收端无法及时处理当前帧的时候发送。

每个帧主要分为以下七个部分

* 1.**帧起始**:表示数据帧开始的段。 
* 2.**仲裁段**:表示该帧优先级的段。 
* 3.**控制段**:表示数据的字节数及保留位的段。 
* 4.**数据段**:数据的内容，一帧可发送0~8个字节的数据。 
* 5.**CRC段**:检查帧的传输错误的段。 
* 6.**ACK段**:表示确认正常接收的段。 
* 7.**帧结束**:表示数据帧结束的段。 

其中，标准帧的布局格式主要是这样的：

**帧起始[0]+帧ID[1:12]+RTR+IDE+R0[13:15]+DTC[15:18]+DATA[19:82]+CRC32[83:98]+CRC EOF+ACK+ACK EOF[99:101]+EOF[102:108]**

扩展ID数据帧主要区别在于仲裁段的区别。其余的数据皆是一样的。

**帧起始**：标准帧和扩展帧都是由1个位的显性电平表示帧起始。
 
**仲裁段**：表示数据优先级的段，标准帧和扩展帧格式在本段有所区别，标准格式的ID 有11 个位。从ID28 到ID18 被依次发送。禁止高7 位都为隐性（禁止设定：ID=1111111XXXX，原因：can通信采用的是NZR编码，而can的仲裁是靠数据帧中的ID部分来实现的，全为隐性状态，可能导致仲裁失败！）。扩展格式的 ID 有29 个位。基本ID 从ID28 到ID18，扩展ID 由ID17 到ID0 表示。基本ID 和标准格式的ID 相同。禁止高7 位都为隐性（禁止设定：基本ID=1111111XXXX）。 
其中RTR位用于标识是否是远程帧（0，数据帧；1，远程帧），IDE位为标识符选择位（0，使用标准标识符；1，使用扩展标识符），SRR位为代替远程请求位，为隐性位，它代替了标准帧中的RTR位。 

**控制段**：由6个位构成，表示数据段的字节数。 
数据段，该段可包含0~8个字节的数据。从最高位（MSB）开始输出，标准帧和扩展帧在这个段的定义都是一样的。 

**CRC段**：该段用于检查帧传输错误。由15个位的CRC顺序和1个位的CRC界定符（用于分隔的位）组成，标准帧和扩展帧在这个段的格式也是相同的。 

**ACK段**：此段用来确认是否正常接收。由ACK槽(ACK Slot)和ACK界定符2个位组成。标准帧和扩展帧在这个段的格式也是相同的。

而ID的主要作用是充当一个“地址”的角色。但是因为CAN总线协议内部其实没有真正的总线地址，所有数据都是直接广播发送的。所以严格上来讲，其实ID更像是一个约定的过滤码一般。所有数据经过了ID的过滤，使得符合ID格式的数据被器件接收，不符合的被器件丢弃，避免了广播风暴。

ID的校验主要是使用波形校验+高位抢占的模式。由CAN总线的电气参数可知，整个CAN是以差分电平进行数据传输的。所有的数据都是由**隐性电平（1）**和**显性电平（0）**组成。其中，显性电平是指两个传输电平之间的信号的差为正值，隐性电平则为两个传输电平之间的信号的差为零（共模数据）。而ID的传输就是将ID数据通过上述的方式进行译码传输。当发送端发出第一个ID的二进制位时，网络中**所有的器件**（除发送端）都会接收到当前二进制数并且与自身约定好的ID的第一位数据进行比对，如果一致则接着向下比对。**要注意的是，单个节点需接受的地址为0x11001100，主机发出0x11001011，则在第6个数据位发送之后，此节点选择不接该数据包。除非所有字符皆匹配，否则拒绝接收。**

CAN总线的ID主要为两种：标准ID与扩展ID。其中，标准ID为**11位**，扩展ID为**18位**，且扩展ID与标准ID组成的帧格式几乎完全不同。但是扩展ID组成的帧必定会包含标准ID。会出现两种ID的原因主要是因为有可能现场设备太多，ID分配不均。所以使用更多的ID会使当前CAN总线最多带起100+的设备（网上资料，未经证实）。

#CAN总线的波特率计算方式

位速率：发送设备每秒发送的数据位数被称为位速率。一位可以分为4段时间：

* 1.同步时间（SS）
* 2.传播时间段（PTS）
* 3.相位缓冲段1（PBS1）
* 4.相位缓冲段2（PBS2）

这些段在公式中可以使用时间元确定（Time quantum）。

其中，STM32中bxCAN将相位缓冲段1和传播时间段合并为时间段1（BS1），而剩下的并没有什么变化。所以bxCAN的波特率分为三段时间：

~ Aligned
 SYSNC_SEG（SS）+BS1(PTC+PBS1)+BS2(PBS2). 
~  

STM32的BS1段可以设置为1~16个时间单元，刚好等于上面介绍的传播时间段和相位缓冲段1之和。

而主要计算公式为：

~ Equation 
\begin{aligned}
  band=1/bit_{time}  \\ 
  bit_{time}=1*t_q+t_{BS1}+t_{BS2} \\
  t_{BS1}=t_q*(TS1[3:0]+1) \\
  t_{BS2}=t_q*(TS2[2:0]+1) \\
  t_q=(BRP[9:0]+1)*t_{PCLK}  \\
  t_q=Time\ Quantum  \\
  t_{PCLK}=APB Clock。  
\end{aligned}
~

# ID过滤方式

CAN的协议中，没有任何地址数据，所有的数据帧全部都是广播发送。
